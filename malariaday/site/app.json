[{"name":"app.R","content":"library(shiny)\r\nlibrary(leaflet)\r\nlibrary(shinyjs)\r\nlibrary(readxl)\r\nlibrary(tidyverse)\r\n\r\n# Download the xlsx file from the URL\r\ntemp <- tempfile(fileext = \".xlsx\")\r\ndownload.file(\"https://github.com/nunososorio/nunososorio.github.io/raw/main/malariaday/is_endemic.xlsx\", temp, mode = \"wb\")\r\n\r\n# Load the downloaded xlsx file\r\nendemic <- read_excel(temp)\r\n\r\n# Define UI for application\r\nui <- fluidPage(\r\n  titlePanel(\"Descobre os Países Endémicos de Malária:\"),\r\n  leafletOutput(\"map\"),\r\n  useShinyjs(),\r\n  p(\"PEvoGEn, ICVS\"),\r\n  div(id = \"feedback\", style = \"font-weight: bold; color: green;\"),\r\n  div(id = \"feedback2\", style = \"font-weight: bold; color: blue;\")\r\n)\r\n\r\n# Define server logic\r\nserver <- function(input, output) {\r\n  # Render Leaflet map\r\n  output$map <- renderLeaflet({\r\n    leaflet() %>%\r\n      addTiles() %>%\r\n      setView(lng = 0, lat = 0, zoom = 2)\r\n  })\r\n  \r\n  # Create a reactive value for selected country\r\n  selected_country <- reactiveVal(NULL)\r\n  correct_guesses <- reactiveVal(0)\r\n  \r\n  # Observe clicks on the map\r\n  observeEvent(input$map_click, {\r\n    click <- input$map_click\r\n    clicked_country <- endemic[round(endemic$lat) == round(click$lat),]\r\n    \r\n    if (any(clicked_country$region %in% endemic[round(endemic$lng) == round(click$lng),]$region)) {\r\n      correct_guesses(correct_guesses() + 1)\r\n      selected_country(\"Correto!\")\r\n    } else {\r\n      selected_country(\"Incorreto\")\r\n    }\r\n    \r\n    shinyjs::html(\"feedback\", selected_country())\r\n    shinyjs::show(\"feedback\")\r\n    shinyjs::html(\"feedback2\", paste(\"Clicks corretos:\", correct_guesses()))\r\n    shinyjs::show(\"feedback2\")\r\n  })\r\n}\r\n\r\n# Run the application\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
