[{"name":"app.R","content":"library(shiny)\r\n\r\n# Define server logic\r\nserver <- function(input, output, session) {\r\n  \r\n  # Reactive expression to read the CSV file\r\n  data <- reactive({\r\n    read.csv('articles_per_year.csv')\r\n  })\r\n  \r\n  # Reactive expression to filter the data based on the selected keywords and year range\r\n  filtered_data <- reactive({\r\n    data <- data()\r\n    data <- data[data$Year >= input$start_year & data$Year <= input$end_year, ]\r\n    data[, c('Year', input$keyword)]\r\n  })\r\n  \r\n  # Generate a line plot of the data\r\n  output$plot <- renderPlot({\r\n    if (length(input$keyword) > 0) {\r\n      data <- filtered_data()\r\n      matplot(data$Year, data[,-1], type = 'l', lty = 1, lwd = 2, xlab = 'Year', ylab = 'Number of Articles')\r\n      legend(\"topleft\", legend = colnames(data)[-1], col = 1:ncol(data), lty = 1, lwd = 2, cex = 0.8)\r\n    }\r\n  })\r\n  \r\n  # Update the sliders whenever the input changes\r\n  observeEvent(input$start_year, {\r\n    updateSliderInput(session, \"end_year\", min = input$start_year)\r\n  })\r\n  observeEvent(input$end_year, {\r\n    updateSliderInput(session, \"start_year\", max = input$end_year)\r\n  })\r\n  \r\n  # Add a figure legend\r\n  output$legend <- renderText({\r\n    return(paste(\"Figure 1: Line plot of the number of articles published in PubMed for the keywords\", paste(input$keyword, collapse = \", \"), \"from \", input$start_year, \" to \", input$end_year, \".\"))\r\n  })\r\n}\r\n\r\n# Define UI for the app\r\nui <- fluidPage(\r\n  titlePanel(\"Omics Article Trends in PubMed\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"keyword\", \"Select Keyword\", choices = colnames(read.csv('articles_per_year.csv'))[-1], selected = c(\"genomics\", \"proteomics\", \"metabolomics\", \"transcriptomics\"), multiple = TRUE),\r\n      sliderInput(\"start_year\", \"Start Year\", min = 1990, max = 2023, value = 1990, sep = \"\", step = 1),\r\n      sliderInput(\"end_year\", \"End Year\", min = 1990, max = 2023, value = 2023, sep = \"\", step = 1)\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"plot\"),\r\n      textOutput(\"legend\"),\r\n      textOutput(\"info\")\r\n    )\r\n  )\r\n)\r\n\r\n# Create Shiny app\r\nshinyApp(ui = ui, server = server)\r\n\r\n      \r\n#\"Yearly publication trends in various omics fields from 1990 to 2022. The data was collected from the PubMed database using the Bio.Entrez and Bio.Medline modules from the Biopython library. The search was performed on 04/11/2023 using the keywords genomics, metagenomics, transcriptomics, proteomics, metabolomics, lipidomics, phenomics, multiomics, single-cell, epigenomics, glycomics, immunomics, pharmacogenomics, toxicogenomics. The number of articles published each year in each field was plotted using the matplotlib library. The app was created with ShinyLive and deployed on Github.\"),\r\n#Nuno S. OsÃ³rio, v.041123\", (C)2023\r\n\r\n\r\n","type":"text"},{"name":"articles_per_year.csv","content":"Year,genomics,metagenomics,transcriptomics,proteomics,metabolomics,lipidomics,phenomics,multiomics,single-cell,epigenomics,glycomics,immunomics,pharmacogenomics,toxicogenomics\r\n1990,17049,0,1,0,0,0,1,0,373,0,0,0,19,1\r\n1991,18751,0,0,0,0,0,0,0,424,0,0,0,51,0\r\n1992,20591,0,3,1,0,0,0,0,414,0,0,0,63,2\r\n1993,23295,0,1,1,1,0,0,0,435,1,0,0,69,1\r\n1994,25236,0,4,0,0,0,0,0,482,0,0,0,75,0\r\n1995,26901,0,4,3,0,0,1,0,518,0,0,0,100,0\r\n1996,27319,0,4,11,0,0,1,0,596,0,0,0,96,0\r\n1997,28664,0,10,43,0,0,2,0,632,1,0,0,121,0\r\n1998,29892,1,24,71,1,0,1,0,657,0,0,0,142,0\r\n1999,31436,0,183,180,1,0,1,0,664,2,0,1,211,1\r\n2000,35493,1,929,463,8,0,4,0,822,2,1,0,355,3\r\n2001,37175,2,1871,1014,13,1,5,0,780,4,5,4,565,17\r\n2002,38104,7,2819,1743,43,1,11,0,810,13,11,4,712,42\r\n2003,41353,14,4137,2466,88,9,15,0,835,20,26,7,839,78\r\n2004,45652,30,5621,3687,139,21,29,0,926,25,38,4,940,112\r\n2005,48523,76,6829,4554,211,47,25,1,1087,60,53,16,1005,120\r\n2006,50849,101,7594,5444,289,49,31,4,1167,83,93,22,1068,136\r\n2007,52945,191,8355,6114,461,95,45,2,1147,126,117,25,1160,136\r\n2008,55669,319,9364,6577,697,84,48,3,1235,170,162,22,1320,140\r\n2009,57511,504,10550,7026,1164,151,61,2,1359,276,177,17,1268,135\r\n2010,61888,943,11946,7769,1437,130,51,7,1472,688,205,39,1389,130\r\n2011,67027,1374,13158,8404,1804,221,64,16,1816,1068,220,25,1464,143\r\n2012,72100,2008,14601,9096,2396,234,72,23,2031,1118,306,14,1624,177\r\n2013,74215,1765,15479,9186,2675,368,91,59,2279,1341,359,23,1666,175\r\n2014,80160,1440,16311,10195,3453,438,129,80,2451,1430,391,29,1953,204\r\n2015,83950,1768,17953,10855,4051,536,230,127,2719,1711,512,28,2059,206\r\n2016,86122,1993,18589,11482,4866,620,241,240,2931,1971,475,28,2234,219\r\n2017,85799,2350,19554,11663,5479,769,294,319,3431,2028,527,21,2320,213\r\n2018,87873,2728,20927,12091,6401,953,401,505,4157,2262,513,41,2252,195\r\n2019,94107,3162,24343,13000,7872,1215,550,777,4953,2520,483,55,2292,187\r\n2020,101807,3848,27409,14535,9512,1569,748,1344,6432,2904,555,90,2429,254\r\n2021,110642,4768,31002,16227,11443,1896,974,2212,8788,3256,586,149,2539,252\r\n2022,103786,5190,29029,15466,12806,1879,1075,3102,10134,3023,597,125,2122,297\r\n2023,81409,4542,24471,13302,11028,1723,987,3185,10330,2273,369,107,1563,209\r\n","type":"text"}]
